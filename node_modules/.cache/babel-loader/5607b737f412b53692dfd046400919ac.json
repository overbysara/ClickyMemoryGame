{"ast":null,"code":"var _jsxFileName = \"/Users/saraoverby/CodingBootCamp/my-app/src/components/Game/index.js\";\n//Require in Dependencies\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport Modal from \"../Modal\";\nimport pictures from \"../../images.json\"; // Game logic\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"Click on any picure to start\",\n      modalMessage: \"\",\n      pictures: pictures,\n      score: 0,\n      topScore: 0,\n      alreadyClicked: [],\n      showModal: false\n    };\n\n    this.imageClick = id => {\n      console.log(id);\n      const _this$state = this.state,\n            alreadyClicked = _this$state.alreadyClicked,\n            score = _this$state.score,\n            topScore = _this$state.topScore,\n            pictures = _this$state.pictures; // Shuffle pics\n\n      let shuffledPictures = Array.from(pictures);\n      shuffledPictures.sort(() => Math.random() - 0.5);\n\n      if (alreadyClicked.includes(id)) {\n        this.showModal(\"AWWWW, POOR DOGGY. YOU LOST.\", \"assets/images/you-lost-dog.png\");\n        this.setState({\n          message: \"Bad Dog! You Guessed Incorrectly!\",\n          // Set score to 0\n          score: 0,\n          // Reset alreadyClicked\n          alreadyClicked: [],\n          pictures: shuffledPictures\n        });\n      } else {\n        // Push clicked picture id into array of pictures already clicked\n        let newAlreadyClicked = Array.from(alreadyClicked);\n        newAlreadyClicked.push(id); // Increment score\n\n        const newScore = score + 1;\n        let newTopScore = topScore;\n\n        if (newScore > topScore) {\n          newTopScore = newScore;\n\n          if (newTopScore === 12) {\n            this.showModal(\"ATTA DOG! YOU WON!\", \"assets/images/you-won-dog.png\");\n          }\n        }\n\n        this.setState({\n          message: \"Good Dog! You Guessed Correctly!\",\n          topScore: newTopScore,\n          score: newScore,\n          pictures: shuffledPictures,\n          alreadyClicked: newAlreadyClicked\n        });\n      }\n    };\n  }\n\n  showModal(message, image) {\n    this.setState({\n      modalMessage: message,\n      modalImage: image,\n      showModal: true\n    });\n  }\n\n  render() {\n    console.log(this.state.pictures);\n    const _this$state2 = this.state,\n          message = _this$state2.message,\n          score = _this$state2.score,\n          topScore = _this$state2.topScore,\n          pictures = _this$state2.pictures;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      message: message,\n      score: score,\n      topScore: topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, pictures.map((picture, index) => React.createElement(ClickItem, {\n      key: index,\n      id: picture.id,\n      image: picture.image,\n      handleClick: this.imageClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      message: this.state.modalMessage,\n      image: this.state.modalImage,\n      show: this.state.showModal,\n      onClose: () => this.setState({\n        showModal: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/saraoverby/CodingBootCamp/my-app/src/components/Game/index.js"],"names":["React","Component","Nav","Header","Container","ClickItem","Footer","Modal","pictures","Game","state","message","modalMessage","score","topScore","alreadyClicked","showModal","imageClick","id","console","log","shuffledPictures","Array","from","sort","Math","random","includes","setState","newAlreadyClicked","push","newScore","newTopScore","image","modalImage","render","map","picture","index"],"mappings":"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","sourcesContent":["//Require in Dependencies\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport Modal from \"../Modal\";\nimport pictures from \"../../images.json\";\n\n// Game logic\nclass Game extends Component {\n\n    state = {\n      message: \"Click on any picure to start\",\n      modalMessage: \"\",\n      pictures: pictures,\n      score: 0,\n      topScore: 0,\n      alreadyClicked: [],\n      showModal: false\n    }\n  \n  imageClick = (id) => {\n    console.log(id);\n    const{alreadyClicked, score, topScore, pictures} = this.state;\n    // Shuffle pics\n    let shuffledPictures = Array.from(pictures);\n    shuffledPictures.sort(() => Math.random() - 0.5);\n      if (alreadyClicked.includes(id)) {\n        this.showModal(\"AWWWW, POOR DOGGY. YOU LOST.\", \"assets/images/you-lost-dog.png\");\n        this.setState({\n          message: \"Bad Dog! You Guessed Incorrectly!\",\n          // Set score to 0\n          score: 0,\n          // Reset alreadyClicked\n          alreadyClicked: [],\n          pictures: shuffledPictures\n        })\n      } else {\n        // Push clicked picture id into array of pictures already clicked\n        let newAlreadyClicked = Array.from(alreadyClicked)\n        newAlreadyClicked.push(id);\n        // Increment score\n        const newScore = score + 1;\n        let newTopScore = topScore;\n        if (newScore > topScore) {\n          newTopScore = newScore;\n          if (newTopScore === 12) {\n            this.showModal(\"ATTA DOG! YOU WON!\", \"assets/images/you-won-dog.png\")\n          }\n        }\n        \n        this.setState({\n          message: \"Good Dog! You Guessed Correctly!\",\n          topScore: newTopScore,\n          score: newScore,\n          pictures: shuffledPictures,\n          alreadyClicked: newAlreadyClicked\n        })\n      }\n  }\n\n  showModal(message, image) {\n   this.setState({modalMessage: message, modalImage: image, showModal: true})\n  }\n  \n    render() {\n      console.log(this.state.pictures);\n      const {message, score, topScore, pictures} = this.state;\n    return (\n      <div className=\"App\">\n        <Nav message={message} score={score} topScore={topScore} />\n        <Header />\n        <Container>\n          {pictures.map((picture, index) => (\n            <ClickItem key={index} id={picture.id} image={picture.image} \n            handleClick={this.imageClick} />\n          ))}\n        </Container>\n        <Modal message={this.state.modalMessage} image={this.state.modalImage} show={this.state.showModal} onClose={()=>this.setState({showModal:false})} />\n        <Footer />\n      </div>\n    );\n  }\n  }\n  \n  export default Game;"]},"metadata":{},"sourceType":"module"}